{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Detail","props","history","useHistory","useParams","useState","alert","alertChange","inputDataChange","useEffect","timer","setTimeout","clearTimeout","className","onChange","e","target","value","class","role","src","width","shoes","onClick","goBack","Card","App","Data","shoesChange","load","loadChange","Loading","exact","path","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","Item","Divider","Jumbotron","Button","variant","Container","Row","map","a","i","Col","axios","get","then","result","data","catch","post","pw","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07789967.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\r\n  {\r\n    id: 0,\r\n    title: \"White and Black\",\r\n    content: \"Born in France\",\r\n    price: 120000,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    title: \"Red Knit\",\r\n    content: \"Born in Seoul\",\r\n    price: 110000,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"Grey Yordan\",\r\n    content: \"Born in the States\",\r\n    price: 130000,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction Detail(props) {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  let [alert, alertChange] = useState(true);\r\n  let [inputData, inputDataChange] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      alertChange(false);\r\n    }, 2000);\r\n\r\n    return () => {\r\n      //컴포넌트 퇴장시\r\n      clearTimeout(timer);\r\n    };\r\n  }, [alert]); //alert라는 state가 변경이 될 때만 실행됨\r\n  //그냥 []일 경우 Detail 컴포넌트가 실행될 때 한번만 실행되는 useEffect\r\n  return (\r\n    <div className=\"container\">\r\n      {/* {inputData}  input에 입력할 때마다 재랜더링-> 낭비*/}\r\n      <input\r\n        onChange={(e) => {\r\n          inputDataChange(e.target.value);\r\n        }}\r\n      ></input>\r\n      {alert === true ? (\r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n          A simple primary alert—check it out!\r\n        </div>\r\n      ) : null}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n          <p>{props.shoes[id].content}</p>\r\n          <p>{props.shoes[id].price}</p>\r\n          <button className=\"btn btn-danger\">주문하기</button>\r\n          <button\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import logo from \"./logo.svg\";\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Jumbotron,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Data from \"./data.js\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Detail from \"./Detail.js\";\r\nimport axios from \"axios\";\r\n\r\nfunction Card(props) {\r\n  //컴포넌트는 간단하게 작성\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n      <h4>{props.shoes.title}</h4>\r\n      <p>\r\n        {props.shoes.content} & {props.shoes.price}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  let [shoes, shoesChange] = useState(Data);\r\n  let [load, loadChange] = useState(\"\");\r\n\r\n  function Loading() {\r\n    return (\r\n      <div class=\"spinner-border text-dark\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link>\r\n                <Link to=\"/\">Home</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/detail\">Link</Link>\r\n              </Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Jumbotron className=\"background\">\r\n          <h1>Hello, world!</h1>\r\n          <p>\r\n            This is a simple hero unit, a simple jumbotron-style component for\r\n            calling extra attention to featured content or information.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\">Learn more</Button>\r\n          </p>\r\n        </Jumbotron>\r\n        <Container>\r\n          <Row>\r\n            {shoes.map((a, i) => {\r\n              //map 함수에서 반복 돌리기 (shoes배열이 변경되면 자동 업뎃)\r\n              return (\r\n                <Col>\r\n                  <Card shoes={shoes[i]}></Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          {load === true ? <Loading></Loading> : null}\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              loadChange(true); //로딩되는 동안 표시하기\r\n              axios\r\n                .get(\"https://codingapple1.github.io/shop/data2.json\")\r\n                .then((result) => {\r\n                  loadChange(false);\r\n                  shoesChange([...shoes, ...result.data]); //사본없이 새 배열 자동생성 -> map 자동 업뎃\r\n                })\r\n                .catch(() => {\r\n                  loadChange(false);\r\n                });\r\n            }}\r\n          >\r\n            더보기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\"https://codingapple1.github.io/shop/data2.json\", {\r\n                  id: \"test\",\r\n                  pw: 1234,\r\n                })\r\n                .then((result) => {})\r\n                .catch(() => {});\r\n            }}\r\n          >\r\n            보내기\r\n          </button>\r\n        </Container>\r\n      </Route>\r\n      <Route path=\"/detail/:id\">\r\n        <Detail shoes={shoes}></Detail>\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}